{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "The datetime components rely on <a href=\"https://momentjs.com/\" target=\"_blank\">Moment.js</a> and <a href=\"https://momentjs.com/timezone/\" target=\"_blank\">Moment Timezone</a>.\n\n### Usage\n\n    <px-datetime-range-field from-moment=\"{{...}}\" to-moment=\"{{...}}\">\n    </px-datetime-range-field>\n\n\n### Styling\n\nThe following custom properties are available for styling. Please also refer to px-forms-design for additional style variables used by this component.\n\nCustom property | Description\n:----------------|:-------------\n`--px-datetime-range-field-to-color` | Text color of the \"TO\" between start and end date input fields",
      "summary": "",
      "path": "px-datetime-range-field.html",
      "properties": [
        {
          "name": "fromMoment",
          "type": "Object",
          "description": "Moment object start date & time",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.rangeMoments"
        },
        {
          "name": "toMoment",
          "type": "Object",
          "description": "Moment object end date & time",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.rangeMoments"
        },
        {
          "name": "presetRanges",
          "type": "Object",
          "description": "(optional:  'px-{datetime}-range-panel')\n\nThe preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": \"2013-02-04T10:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   }\n  ]\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "dateFormat",
          "type": "string",
          "description": "Moment format string for the DATE format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"YYYY-MM-DD\""
        },
        {
          "name": "timeFormat",
          "type": "string",
          "description": "Moment format string for the TIME format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"HH:mm:ss\""
        },
        {
          "name": "showTimeZone",
          "type": "string",
          "description": "Can be set to show the timezone. Can have 4 possible values:\n - 'dropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all time zones.\n - 'extendedDropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Contains all existing time zones (588) from the IANA tz database.\n - 'text': Shows the time zone as non-editable text.\n - 'abbreviatedText': Shows the abbreviated time zone as non editable text (such as PST, EST, etc). Note: many time zones do not have an abbreviation.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "hideTime",
          "type": "boolean",
          "description": "Controls whether time should be hidden in this field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "hideDate",
          "type": "boolean",
          "description": "Controls whether date should be hidden in this field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "hideIcon",
          "type": "boolean",
          "description": "Controls whether the calendar/clock icons should be hidden.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "isValid",
          "type": "boolean",
          "description": "Boolean stating if the date, time, or range is valid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "Boolean stating if the range field is required.\nWill result in an error if left blank.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_isRangeValid",
          "type": "boolean",
          "description": "Used internally to determine if the range validation error should be displayed.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_fromValid",
          "type": "boolean",
          "description": "Reflects if the 'from' field is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 192,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_toValid",
          "type": "boolean",
          "description": "Reflects if the 'to' field is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 196,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_showFromValidationMessage",
          "type": "boolean",
          "description": "Used to determine which validation message to show when there are multiple invalid fields.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_showToValidationMessage",
          "type": "boolean",
          "description": "Used to determine which validation message to show when there are multiple invalid fields.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "hideValidationMessages",
          "type": "boolean",
          "description": "Hides the validation messages if set to 'true'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "preventNotificationOnChange",
          "type": "boolean",
          "description": "Used to prevent this element from firing px-datetime-range-submitted event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "allowWrap",
          "type": "boolean",
          "description": "Allows the component to wrap the fields and buttons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_tempFromMomentObj",
          "type": "Object",
          "description": "Temporary moment object used for validation prior to applying as a new value for fromMoment.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 237,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "_tempToMomentObj",
          "type": "Object",
          "description": "Temporary moment object used for validation prior to applying as a new value for toMoment.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 7
            },
            "end": {
              "line": 245,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "resources",
          "type": "Object",
          "description": "List of key/values to be included for translating this component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"en\":{\"from can not be later than to\":\"from can not be later than to\",\"from\":\"from\",\"TO\":\"TO\"}}"
        },
        {
          "name": "keyBindings",
          "type": "Object",
          "description": "Key bindings for iron-a11y-keys-behavior",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 4
            },
            "end": {
              "line": 268,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 79,
              "column": 2
            },
            "end": {
              "line": 89,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_timeZoneChanged",
          "description": "makes sure the moment objects reflect the timezone",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 104,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_validateRangeOrder",
          "description": "Validation for the range. Makes sure the ranges are in chronological order",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 110,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fromMoment"
            },
            {
              "name": "toMoment"
            }
          ],
          "return": {
            "type": "Boolean",
            "desc": "true if chronological order, false otherwise"
          },
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "ready",
          "description": "Sets up listeners for a variety of events fired from or passing through this component",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 280,
              "column": 4
            },
            "end": {
              "line": 285,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_focusFirstToEntry",
          "description": "Focuses select on the first entry of the 'to' field",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 289,
              "column": 4
            },
            "end": {
              "line": 293,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_focusLastFromEntry",
          "description": "Focuses select on the first entry of the 'from' field",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_getWrapClass",
          "description": "Helper function to style the outer div",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 4
            },
            "end": {
              "line": 307,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowWrap"
            }
          ]
        },
        {
          "name": "_getFromFieldClass",
          "description": "Helper function to style #fromFields",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 311,
              "column": 4
            },
            "end": {
              "line": 313,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowWrap"
            }
          ]
        },
        {
          "name": "_getToFieldClass",
          "description": "Helper function to style #toFields",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 317,
              "column": 4
            },
            "end": {
              "line": 322,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showButtons"
            },
            {
              "name": "allowWrap"
            }
          ]
        },
        {
          "name": "_getIsValid",
          "description": "Computer function to determine if something is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 326,
              "column": 4
            },
            "end": {
              "line": 328,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_fromValid"
            },
            {
              "name": "_toValid"
            },
            {
              "name": "_isRangeValid"
            }
          ]
        },
        {
          "name": "_getIsRangeValid",
          "description": "Function to determine if the range is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 4
            },
            "end": {
              "line": 342,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fromMoment"
            },
            {
              "name": "toMoment"
            }
          ]
        },
        {
          "name": "_validationMessagePriority",
          "description": "Determines which validation message is displayed\nShow validation messages for range first, then from, and then to",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 347,
              "column": 4
            },
            "end": {
              "line": 363,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_fromValid"
            },
            {
              "name": "_toValid"
            },
            {
              "name": "_isRangeValid"
            },
            {
              "name": "hideValidationMessages"
            }
          ]
        },
        {
          "name": "_dateTimeButtons",
          "description": "Handle evt from a button being clicked",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 367,
              "column": 4
            },
            "end": {
              "line": 375,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_onEsc",
          "description": "Handle escape key press",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 4
            },
            "end": {
              "line": 383,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_onEnter",
          "description": "Handle enter key press",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 4
            },
            "end": {
              "line": 391,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_handleFromValid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 4
            },
            "end": {
              "line": 409,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_handleToValid",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 412,
              "column": 4
            },
            "end": {
              "line": 427,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_applyTemps",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 428,
              "column": 4
            },
            "end": {
              "line": 437,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_applyChanges",
          "description": "Validate field and range\nIf valid set the momentObj(s) that changed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 4
            },
            "end": {
              "line": 464,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "origin"
            }
          ]
        },
        {
          "name": "_cancelChanges",
          "description": "Clear fields or reset to previous moment objs",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 468,
              "column": 4
            },
            "end": {
              "line": 490,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 102,
          "column": 10
        },
        "end": {
          "line": 491,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "preset-ranges",
          "description": "(optional:  'px-{datetime}-range-panel')\n\nThe preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": \"2013-02-04T10:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   }\n  ]\n```",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 24
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "date-format",
          "description": "Moment format string for the DATE format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "time-format",
          "description": "Moment format string for the TIME format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 6
            },
            "end": {
              "line": 130,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "show-time-zone",
          "description": "Can be set to show the timezone. Can have 4 possible values:\n - 'dropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all time zones.\n - 'extendedDropdown': Shows the time zone as a dropdown which the user can use to select a different time zone. Contains all existing time zones (588) from the IANA tz database.\n - 'text': Shows the time zone as non-editable text.\n - 'abbreviatedText': Shows the abbreviated time zone as non editable text (such as PST, EST, etc). Note: many time zones do not have an abbreviation.",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 6
            },
            "end": {
              "line": 142,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "hide-time",
          "description": "Controls whether time should be hidden in this field.",
          "sourceRange": {
            "start": {
              "line": 146,
              "column": 6
            },
            "end": {
              "line": 149,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-date",
          "description": "Controls whether date should be hidden in this field.",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 6
            },
            "end": {
              "line": 156,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-icon",
          "description": "Controls whether the calendar/clock icons should be hidden.",
          "sourceRange": {
            "start": {
              "line": 160,
              "column": 6
            },
            "end": {
              "line": 163,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-valid",
          "description": "Boolean stating if the date, time, or range is valid.",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 6
            },
            "end": {
              "line": 171,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "required",
          "description": "Boolean stating if the range field is required.\nWill result in an error if left blank.",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 6
            },
            "end": {
              "line": 179,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-validation-messages",
          "description": "Hides the validation messages if set to 'true'",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "prevent-notification-on-change",
          "description": "Used to prevent this element from firing px-datetime-range-submitted event.",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 6
            },
            "end": {
              "line": 226,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "allow-wrap",
          "description": "Allows the component to wrap the fields and buttons",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 233,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "resources",
          "description": "List of key/values to be included for translating this component",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 6
            },
            "end": {
              "line": 260,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "is-valid-changed",
          "description": "Fired when the `isValid` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-datetime-range-field"
    }
  ]
}
