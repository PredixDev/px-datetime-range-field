{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "The datetime components rely on <a href=\"https://momentjs.com/\" target=\"_blank\">Moment.js</a> and <a href=\"https://momentjs.com/timezone/\" target=\"_blank\">Moment Timezone</a>.\n\n### Usage\n\n    <px-datetime-range-field range=\"{{...}}\">\n    </px-datetime-range-field>\n\n\n### Styling\n\nThe following custom properties are available for styling. Please also refer to px-forms-design for additional style variables used by this component.\n\nCustom property | Description\n:----------------|:-------------\n`--px-datetime-range-field-to-color` | Text color of the \"TO\" between start and end date input fields",
      "summary": "",
      "path": "px-datetime-range-field.html",
      "properties": [
        {
          "name": "fromMoment",
          "type": "Object",
          "description": "Moment object start date & time",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 19,
              "column": 4
            },
            "end": {
              "line": 22,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.rangeMoments"
        },
        {
          "name": "toMoment",
          "type": "Object",
          "description": "Moment object end date & time",
          "privacy": "private",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 28,
              "column": 4
            },
            "end": {
              "line": 31,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "PxDatetimeBehavior.rangeMoments"
        },
        {
          "name": "presetRanges",
          "type": "Object",
          "description": "(optional:  'px-{datetime}-range-panel')\n\nThe preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": \"2013-02-04T10:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   }\n  ]\n```",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {}
          },
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "range",
          "type": "Object",
          "description": "(required: 'px-{datetime}-range-{picker}')\n\nThis is the object you use to instantiate px-datetime components. You can retrieve the object through 2-way data-binding.\n\nFormated as ISO8601 strings\n```\n{\n   \"from\": \"2013-01-07T22:44:30.652Z\",\n   \"to\" : \"2013-02-04T22:44:30.652Z\"\n}\n```\n\nThis object which will be changed when the user Submits their new selected range.",
          "privacy": "public",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {
              "notify": true
            }
          },
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_preventRangeUpdate",
          "type": "boolean",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 101,
              "column": 4
            },
            "end": {
              "line": 104,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false",
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "dateFormat",
          "type": "string",
          "description": "Moment format string for the DATE format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"YYYY-MM-DD\""
        },
        {
          "name": "timeFormat",
          "type": "string",
          "description": "Moment format string for the TIME format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"HH:mm:ss\""
        },
        {
          "name": "showTimeZone",
          "type": "string",
          "description": "Can be set to show the timezone. Can have 2 values:\n - 'dropdown': shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all timezones\n - 'extendedDropdown': shows the time zone as a dropdown which the user can use toselect a different time zone. Contains all existing timezones (588)\n - 'text': shows the time zone as text, non editable\n - 'abbreviatedText': shows the time zone as an abbreviated text, non editable (such as PST, EST...)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "\"\""
        },
        {
          "name": "hideTime",
          "type": "boolean",
          "description": "Controls whether time is displayed in this field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "hideDate",
          "type": "boolean",
          "description": "Controls whether date should be hidden in this field. Typically used\nin combination with hideTime to make the field showing only the time",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "hideIcon",
          "type": "boolean",
          "description": "Controls whether the calendar/clock icons should be hidden",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "isValid",
          "type": "boolean",
          "description": "Booleaning stating if the date, time, or range is valid.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "notify": true,
              "readOnly": true
            }
          }
        },
        {
          "name": "_isRangeValid",
          "type": "boolean",
          "description": "used internally to determine if the range validation error should be displayed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 174,
              "column": 6
            },
            "end": {
              "line": 177,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "_fromValid",
          "type": "boolean",
          "description": "Reflects if the from field is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 6
            },
            "end": {
              "line": 184,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_toValid",
          "type": "boolean",
          "description": "Reflects if the to field is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "_showFromValidationMessage",
          "type": "boolean",
          "description": "Used to determine which valdiation message to show when there are multple invalid fields.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 198,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "_showToValidationMessage",
          "type": "boolean",
          "description": "Used to determine which valdiation message to show when there are multple invalid fields.",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 6
            },
            "end": {
              "line": 205,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "true"
        },
        {
          "name": "hideValidationMessages",
          "type": "boolean",
          "description": "Hides the validation messages if set to true",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "preventNotificationOnChange",
          "type": "boolean",
          "description": "Used to prevent this element from firing px-datetime-range-submitted\nevent and prevent changes to range",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "allowWrap",
          "type": "boolean",
          "description": "Allows the component to wrap the fields and buttons",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "false"
        },
        {
          "name": "resources",
          "type": "Object",
          "description": "List of key/values to be included for translating this component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 6
            },
            "end": {
              "line": 242,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {}
          },
          "defaultValue": "{\"en\":{\"from can not be later than to\":\"from can not be later than to\",\"from\":\"from\",\"TO\":\"TO\"}}"
        },
        {
          "name": "keyBindings",
          "type": "Object",
          "description": "Key bindings for iron-a11y-keys-behavior",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 4
            },
            "end": {
              "line": 250,
              "column": 5
            }
          },
          "metadata": {
            "polymer": {}
          }
        }
      ],
      "methods": [
        {
          "name": "_setRange",
          "description": "for legacy purposes",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 118,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_localeChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 121,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_setMomentFromRange",
          "description": "Converts range into from and to moments\n\nTriggered from a click on cancel, submit, esc, or enter",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 137,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_setRangeFromMoment",
          "description": "Converts 'toMoment' and 'fromMoment' to ISO8601 strings, then set the range with the strings.\n\nTriggered from a click on cancel, submit, esc, or enter",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_applyMomentToString",
          "description": "Applies the current 'from' and 'to' moment objects to the external facing 'range' strings",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 164,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_rollbackMomentFromString",
          "description": "Rollbacks the current 'from' and 'to' moment objects to the external facing 'range' strings",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 172,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_timeZoneChanged",
          "description": "makes sure the moment objects reflect the timezone",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 187,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_validateRangeOrder",
          "description": "Validation for the range. Makes sure the ranges are in chronological order",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Boolean",
            "desc": "true if chronological order, false otherwise"
          },
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "_notifyRangeChanged",
          "description": "This event is fired differently depending on config:\n - If the px-datetime component has an Apply button, then it is fired when the\n  user clicks the Apply button (or presses enter) AND the selected date/time is valid\n - If the px-datetime component does not have an Apply button, then it is fired\n  every time a change is made to the date/time AND the selected date/time is valid",
          "privacy": "protected",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 212,
              "column": 2
            },
            "end": {
              "line": 234,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "r"
            }
          ],
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "ready",
          "description": "Sets up listeners for a variety of events fired from or passing through this component",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 4
            },
            "end": {
              "line": 264,
              "column": 5
            }
          },
          "metadata": {},
          "params": []
        },
        {
          "name": "_focusFirstToEntry",
          "description": "Focuses select on the first entry of the 'to' field",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 4
            },
            "end": {
              "line": 272,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_focusLastFromEntry",
          "description": "Focuses select on the first entry of the 'from' field",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 276,
              "column": 4
            },
            "end": {
              "line": 280,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_getWrapClass",
          "description": "helper fuction to style the outer div",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 284,
              "column": 4
            },
            "end": {
              "line": 286,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowWrap"
            }
          ]
        },
        {
          "name": "_getFromFieldClass",
          "description": "helper function to style #fromFields",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 4
            },
            "end": {
              "line": 292,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "allowWrap"
            }
          ]
        },
        {
          "name": "_getToFieldClass",
          "description": "helper function to style #toFields",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 296,
              "column": 4
            },
            "end": {
              "line": 301,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "showButtons"
            },
            {
              "name": "allowWrap"
            }
          ]
        },
        {
          "name": "_getIsValid",
          "description": "computer function to determine if something is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 305,
              "column": 4
            },
            "end": {
              "line": 310,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_fromValid"
            },
            {
              "name": "_toValid"
            },
            {
              "name": "_isRangeValid"
            }
          ]
        },
        {
          "name": "_getIsRangeValid",
          "description": "computer function to determine if the range is valid",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 314,
              "column": 4
            },
            "end": {
              "line": 324,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fromMoment"
            },
            {
              "name": "toMoment"
            }
          ]
        },
        {
          "name": "_validationMessagePriority",
          "description": "Determines which validation message is displayed\nShow validation messages for range first, then from, and then to",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 4
            },
            "end": {
              "line": 339,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "_fromValid"
            },
            {
              "name": "_toValid"
            },
            {
              "name": "_isRangeValid"
            },
            {
              "name": "hideValidationMessages"
            }
          ]
        },
        {
          "name": "_dateTimeButtons",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 342,
              "column": 4
            },
            "end": {
              "line": 346,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_onEsc",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 349,
              "column": 4
            },
            "end": {
              "line": 353,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_onEnter",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 4
            },
            "end": {
              "line": 360,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "evt"
            }
          ]
        },
        {
          "name": "_momentChanged",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 4
            },
            "end": {
              "line": 367,
              "column": 5
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "momentObj"
            }
          ]
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "index.html",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 100,
          "column": 10
        },
        "end": {
          "line": 368,
          "column": 3
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "attributes": [
        {
          "name": "preset-ranges",
          "description": "(optional:  'px-{datetime}-range-panel')\n\nThe preset date/time ranges to be displayed.\n\n```\n  [\n   {\n     \"displayText\": \"Last 5 Minutes\",\n     \"startDateTime\": \"2013-02-04T22:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   },\n   {\n     \"displayText\": \"Last 12 Hours\",\n     \"startDateTime\": \"2013-02-04T10:44:30.652Z\",\n     \"endDateTime\": \"2013-02-04T22:49:30.652Z\"\n   }\n  ]\n```",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 24
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "range",
          "description": "(required: 'px-{datetime}-range-{picker}')\n\nThis is the object you use to instantiate px-datetime components. You can retrieve the object through 2-way data-binding.\n\nFormated as ISO8601 strings\n```\n{\n   \"from\": \"2013-01-07T22:44:30.652Z\",\n   \"to\" : \"2013-02-04T22:44:30.652Z\"\n}\n```\n\nThis object which will be changed when the user Submits their new selected range.",
          "sourceRange": {
            "file": "bower_components/px-datetime-common/px-datetime-range-behavior.html",
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 98,
              "column": 5
            }
          },
          "metadata": {},
          "type": "Object",
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "name": "date-format",
          "description": "Moment format string for the DATE format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 6
            },
            "end": {
              "line": 119,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "time-format",
          "description": "Moment format string for the TIME format to display/validate this field against\n(see http://momentjs.com/docs/#/parsing/string-format/)",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "show-time-zone",
          "description": "Can be set to show the timezone. Can have 2 values:\n - 'dropdown': shows the time zone as a dropdown which the user can use to select a different time zone. Only contains a subset of all timezones\n - 'extendedDropdown': shows the time zone as a dropdown which the user can use toselect a different time zone. Contains all existing timezones (588)\n - 'text': shows the time zone as text, non editable\n - 'abbreviatedText': shows the time zone as an abbreviated text, non editable (such as PST, EST...)",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 6
            },
            "end": {
              "line": 140,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string"
        },
        {
          "name": "hide-time",
          "description": "Controls whether time is displayed in this field",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 6
            },
            "end": {
              "line": 147,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-date",
          "description": "Controls whether date should be hidden in this field. Typically used\nin combination with hideTime to make the field showing only the time",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 6
            },
            "end": {
              "line": 155,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-icon",
          "description": "Controls whether the calendar/clock icons should be hidden",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 6
            },
            "end": {
              "line": 162,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "is-valid",
          "description": "Booleaning stating if the date, time, or range is valid.",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 6
            },
            "end": {
              "line": 170,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "hide-validation-messages",
          "description": "Hides the validation messages if set to true",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 6
            },
            "end": {
              "line": 212,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "prevent-notification-on-change",
          "description": "Used to prevent this element from firing px-datetime-range-submitted\nevent and prevent changes to range",
          "sourceRange": {
            "start": {
              "line": 217,
              "column": 6
            },
            "end": {
              "line": 220,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "allow-wrap",
          "description": "Allows the component to wrap the fields and buttons",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 6
            },
            "end": {
              "line": 227,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean"
        },
        {
          "name": "resources",
          "description": "List of key/values to be included for translating this component",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 6
            },
            "end": {
              "line": 242,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object"
        }
      ],
      "events": [
        {
          "type": "CustomEvent",
          "name": "px-datetime-range-submitted",
          "description": "px-datetime-range-submitted",
          "metadata": {},
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "range-changed",
          "description": "Fired when the `range` property changes.",
          "metadata": {},
          "inheritedFrom": "pxDatetimeRangeBehavior"
        },
        {
          "type": "CustomEvent",
          "name": "is-valid-changed",
          "description": "Fired when the `isValid` property changes.",
          "metadata": {}
        }
      ],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "px-datetime-range-field"
    }
  ]
}
